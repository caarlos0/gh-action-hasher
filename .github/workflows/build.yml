name: build

concurrency:
  group: ${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

on:
  push:
    tags:
      - v*
    branches:
      - main
    paths:
      - "go.*"
      - "**/*.go"
      - "Taskfile.yml"
      - ".github/workflows/*.yml"
      - "testdata/**"
      - ".goreleaser.yml"
  pull_request:
    paths:
      - "go.*"
      - "**/*.go"
      - "Taskfile.yml"
      - ".github/workflows/*.yml"
      - "testdata/**"
      - ".goreleaser.yml"

permissions:
  contents: read

jobs:
  license-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00
        with:
          go-version: stable
      - name: Check licenses
        run: go run github.com/google/go-licenses/v2@latest check --allowed_licenses=MIT,Apache-2.0,BSD-3-Clause,BSD-2-Clause,ISC ./...
  govulncheck:
    uses: caarlos0/meta/.github/workflows/govulncheck.yml@395f87b2cc4fbb0a99db4decb1b3bbd16bc07cfc
    with:
      go-version: stable
  semgrep:
    uses: caarlos0/meta/.github/workflows/semgrep.yml@395f87b2cc4fbb0a99db4decb1b3bbd16bc07cfc
  ruleguard:
    uses: caarlos0/meta/.github/workflows/ruleguard.yml@395f87b2cc4fbb0a99db4decb1b3bbd16bc07cfc
    with:
      go-version: stable
      args: "-disable largeloopcopy"
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00
        with:
          go-version: stable
      - uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: task ci
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      - uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7
        if: matrix.os == 'ubuntu-latest'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
  dependabot:
    needs: [license-check, build]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
    steps:
      - id: metadata
        uses: dependabot/fetch-metadata@08eff52bf64351f401fb50d4972fa95b9f2c2d1b # v2.4.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - run: |
          gh pr review --approve "$PR_URL"
          gh pr merge --squash --auto "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
